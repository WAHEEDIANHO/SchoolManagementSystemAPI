// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolManagementSystemAPI.Services.General.Repositories.Data;

#nullable disable

namespace SchoolManagementSystemAPI.Services.General.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SchoolManagementSystemAPI.Services.General.Repositories.Schema.AttendanceDetail", b =>
                {
                    b.Property<string>("AttendanceDate")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AttendanceHeaderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AttendanceTimeIn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttendanceTimeOut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AttendanceDate", "UserId");

                    b.HasIndex("AttendanceHeaderId");

                    b.ToTable("AttendanceDetail");
                });

            modelBuilder.Entity("SchoolManagementSystemAPI.Services.General.Repositories.Schema.AttendanceHeader", b =>
                {
                    b.Property<string>("AttendanceHeaderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("GradeNumber")
                        .HasColumnType("int");

                    b.Property<string>("SessionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Term")
                        .HasColumnType("int");

                    b.Property<int>("TotalExpectedAttendance")
                        .HasColumnType("int");

                    b.HasKey("AttendanceHeaderId");

                    b.ToTable("AttendanceHeader");
                });

            modelBuilder.Entity("SchoolManagementSystemAPI.Services.General.Repositories.Schema.Event", b =>
                {
                    b.Property<string>("EventId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventHour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventMinute")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Term")
                        .HasColumnType("int");

                    b.HasKey("EventId");

                    b.HasIndex("SessionName");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("SchoolManagementSystemAPI.Services.General.Repositories.Schema.Grade", b =>
                {
                    b.Property<int>("GradeNumber")
                        .HasColumnType("int");

                    b.Property<string>("GradeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GradeTeacher")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GradeNumber");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("SchoolManagementSystemAPI.Services.General.Repositories.Schema.GradeSubject", b =>
                {
                    b.Property<int>("GradeNumber")
                        .HasColumnType("int");

                    b.Property<string>("SubjectTitle")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SubjectTeacher")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GradeNumber", "SubjectTitle");

                    b.HasIndex("SubjectTitle");

                    b.ToTable("GradeSubjects");
                });

            modelBuilder.Entity("SchoolManagementSystemAPI.Services.General.Repositories.Schema.Lesson", b =>
                {
                    b.Property<string>("LessonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MediaUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Objectives")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TopicId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Transcript")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LessonId");

                    b.HasIndex("TopicId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("SchoolManagementSystemAPI.Services.General.Repositories.Schema.Notification", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("SchoolManagementSystemAPI.Services.General.Repositories.Schema.Session", b =>
                {
                    b.Property<string>("SessionName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("SessionEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SessionStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SessionName");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("SchoolManagementSystemAPI.Services.General.Repositories.Schema.Subject", b =>
                {
                    b.Property<string>("SubjectTitle")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SubjectTitle");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("SchoolManagementSystemAPI.Services.General.Repositories.Schema.Topic", b =>
                {
                    b.Property<string>("TopicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradeSubjectGradeNumber")
                        .HasColumnType("int");

                    b.Property<string>("GradeSubjectSubjectTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Term")
                        .HasColumnType("int");

                    b.Property<string>("TopicName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TopicId");

                    b.HasIndex("GradeSubjectGradeNumber", "GradeSubjectSubjectTitle");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("SchoolManagementSystemAPI.Services.General.Repositories.Schema.Webinar", b =>
                {
                    b.Property<string>("TopicId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("WebinarDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WebinarHour")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeacherInCharge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebinarId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebinarMinute")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TopicId", "WebinarDate", "WebinarHour");

                    b.ToTable("Webinars");
                });

            modelBuilder.Entity("SchoolManagementSystemAPI.Services.General.Repositories.Schema.AttendanceDetail", b =>
                {
                    b.HasOne("SchoolManagementSystemAPI.Services.General.Repositories.Schema.AttendanceHeader", "AttendanceHeader")
                        .WithMany("AttendanceDetails")
                        .HasForeignKey("AttendanceHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttendanceHeader");
                });

            modelBuilder.Entity("SchoolManagementSystemAPI.Services.General.Repositories.Schema.Event", b =>
                {
                    b.HasOne("SchoolManagementSystemAPI.Services.General.Repositories.Schema.Session", "Session")
                        .WithMany()
                        .HasForeignKey("SessionName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Session");
                });

            modelBuilder.Entity("SchoolManagementSystemAPI.Services.General.Repositories.Schema.GradeSubject", b =>
                {
                    b.HasOne("SchoolManagementSystemAPI.Services.General.Repositories.Schema.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolManagementSystemAPI.Services.General.Repositories.Schema.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectTitle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("SchoolManagementSystemAPI.Services.General.Repositories.Schema.Lesson", b =>
                {
                    b.HasOne("SchoolManagementSystemAPI.Services.General.Repositories.Schema.Topic", "Topic")
                        .WithMany("Lessons")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("SchoolManagementSystemAPI.Services.General.Repositories.Schema.Topic", b =>
                {
                    b.HasOne("SchoolManagementSystemAPI.Services.General.Repositories.Schema.GradeSubject", "GradeSubject")
                        .WithMany("Topics")
                        .HasForeignKey("GradeSubjectGradeNumber", "GradeSubjectSubjectTitle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GradeSubject");
                });

            modelBuilder.Entity("SchoolManagementSystemAPI.Services.General.Repositories.Schema.Webinar", b =>
                {
                    b.HasOne("SchoolManagementSystemAPI.Services.General.Repositories.Schema.Topic", "Topic")
                        .WithMany("Webinars")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("SchoolManagementSystemAPI.Services.General.Repositories.Schema.AttendanceHeader", b =>
                {
                    b.Navigation("AttendanceDetails");
                });

            modelBuilder.Entity("SchoolManagementSystemAPI.Services.General.Repositories.Schema.GradeSubject", b =>
                {
                    b.Navigation("Topics");
                });

            modelBuilder.Entity("SchoolManagementSystemAPI.Services.General.Repositories.Schema.Topic", b =>
                {
                    b.Navigation("Lessons");

                    b.Navigation("Webinars");
                });
#pragma warning restore 612, 618
        }
    }
}
